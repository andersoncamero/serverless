service: crud-serverless-users

provider:
  name: aws
  runtime: nodejs20.x
  apiGateway:
    apiKeys:
      - hse-AWS-gen-api-key
  iam:
    role:
      statements:
        - Effect: Allow
          Action: "s3:*"
          Resource: arn:aws:s3:::bucket-serverless-course-123/*
  environment:
        BUCKET: ${ssm:/BUCKET}
        USER_NAME: ${ssm:/USER_NAME}
        PASSWORD: ${ssm:/PASSWORD}
        DATABASE: ${ssm:/DATABASE}
        HOST: ${ssm:/HOST}
        DATABASE_PORT: ${ssm:/DATABASE_PORT}
        DIALECT: ${ssm:/DIALECT}
        LOGGING: ${ssm:/LOGGING}
        SSL: ${ssm:/SSL}

plugins:
  - serverless-offline
  - serverless-dynamodb

package:
  individually: true
  patterns:
    - "!*/**"

functions:
  signedURL:
    handler: signedurl/handler.signedS3URL
    package:
      patterns:
        - "signedurl/handler.js"
    events:
      - http:
          private: true
          path: signedurl
          method: GET
          request:
            parameters:
              querystrings:
                filename: true
  uploadS3:
    handler: uploadS3/handler.thumbnailGenerator
    # layers:
    #   - { Ref: BaseLambdaLayer }
    package:
      patterns:
        - "uploadS3/handler.js"
        - "DB/**"
        - "lib/sequelize.js"
        - "node_modules/**"
    events:
      - s3:
          bucket: bucket-serverless-course-123
          event: s3:ObjectCreated:*
          existing: true
          rules:
            - prefix: upload/


# layers:
#   base:
#     name: "prd-dependencies"
#     compatibleRuntimes:
#       - "nodejs20.x"
#     package:
#       artifact: nodejs.zip

resources:
  Resources:
    S3Bucket:
      Type: "AWS::S3::Bucket"
      Properties:
        PublicAccessBlockConfiguration:
          BlockPublicAcls: false
          BlockPublicPolicy: false
        OwnershipControls:
          Rules:
            - ObjectOwnership: ObjectWriter
        BucketName: bucket-serverless-course-123
    SampleBucketPolicy:
      Type: AWS::S3::BucketPolicy
      Properties:
        Bucket: !Ref S3Bucket
        PolicyDocument:
          Version: "2012-10-17"
          Statement:
            - Action:
                - "s3:GetObject"
              Effect: Allow
              Resource: !Join
                - ""
                - - "arn:aws:s3:::"
                  - !Ref S3Bucket
                  - /*
              Principal: "*"
